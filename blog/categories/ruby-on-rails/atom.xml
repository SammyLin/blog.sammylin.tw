<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ruby on Rails | Sammy Lin]]></title>
  <link href="http://blog.sammylin.tw/blog/categories/ruby-on-rails/atom.xml" rel="self"/>
  <link href="http://blog.sammylin.tw/"/>
  <updated>2014-06-13T09:42:52+08:00</updated>
  <id>http://blog.sammylin.tw/</id>
  <author>
    <name><![CDATA[Sammy]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[Rails] 進入網站前驗證]]></title>
    <link href="http://blog.sammylin.tw/http-basic-authenticate/"/>
    <updated>2012-12-04T20:41:00+08:00</updated>
    <id>http://blog.sammylin.tw/http-basic-authenticate</id>
    <content type="html"><![CDATA[<p>有時候專案尚未公開時，還是需要放到網路上讓其他人來瀏覽，這時候為了怕非相關人員看到這個網站的話，就需要有個關卡，通常都會在nginx或apache來設定，但是這往往還要進到server去處理。
如果在rails上你不想這麼麻煩的話，可以在<code>ApplicationController</code>上直接加上這一行</p>

<pre><code>http_basic_authenticate_with name: "admin", password: "pw"
</code></pre>

<p>就像下面這樣</p>

<p>``` ruby
class ApplicationController &lt; ActionController::Base  protect_from_forgery
  http_basic_authenticate_with name: &ldquo;admin&rdquo;, password: &ldquo;pw&rdquo;
  protect_from_forgery
end</p>

<p>```</p>

<p>當你在進入網站的時候就會需要你輸入帳密才能進入了</p>

<p><img src="https://lh6.googleusercontent.com/-RYBzUO6WDHE/UL3yLnBSaEI/AAAAAAAACBQ/hB0LWke0YaA/s800/b2c64cda0232f18a97b8a215bc138e7b.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Ruby]匯出csv檔時在excel開啟時亂碼]]></title>
    <link href="http://blog.sammylin.tw/export-to-csv-has-mojibake/"/>
    <updated>2012-07-26T09:40:00+08:00</updated>
    <id>http://blog.sammylin.tw/export-to-csv-has-mojibake</id>
    <content type="html"><![CDATA[<p>做個筆記吧..前幾次都是開箱文..哈哈，感覺有點偷懶</p>

<p>以前在<code>ASP.NET</code>的時候要把資料倒進Excel或是CSV，是不怎麼痛的，畢竟都是同一家人嘛。但是我今天要在<code>Ruby</code>中倒資料進去CSV的時候，就會有編碼上的問題。</p>

<p>我們在<code>Ruby</code>中如果要有中文的話，其實我們都會在.rb最上面加一行</p>

<pre><code># encoding : utf-8
</code></pre>

<p>如果要匯出CSV的話<code>Ruby</code>在有一個<a href="http://ruby-doc.org/stdlib-1.9.2/libdoc/csv/rdoc/CSV.html">Class</a>可以用</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;# encoding : utf-8</span>
</span><span class='line'><span class="sr">require &#39;CSV&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">def shom_method</span>
</span><span class='line'>
</span><span class='line'><span class="sr">  CSV.generate do |csv|</span>
</span><span class='line'><span class="sr">    csv &amp;lt;&amp;lt; [&#39;編號&#39;, &#39;姓名&#39;]</span>
</span><span class='line'><span class="sr">    members.each do |member|</span>
</span><span class='line'><span class="sr">  csv &amp;lt;&amp;lt; [num, name]</span>
</span><span class='line'><span class="sr">    end</span>
</span><span class='line'><span class="sr">  end</span>
</span><span class='line'>
</span><span class='line'><span class="sr">end</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>用PC的筆記本打開看&hellip;.沒錯是ok的！
然後用Excel一開&hellip;哇勒~是亂碼..</p>

<p>查了一下是因為我一開始設定的編碼是<code>utf-8</code>，所以我匯出檔案的編碼會是<code>utf-8</code>，因為Excel開的時候就會出現亂碼&hellip;</p>

<p>不過有一個笨方法&hellip;叫User把csv檔用筆記本打開之後用<code>ANSI</code>存檔後用Excel開就ok啦&hellip;..</p>

<p>但是我沒這個膽&hellip;</p>

<h2>解決方式</h2>

<p>我也沒有找到一個很好的處理方式&hellip;</p>

<p>目前比較簡單的方式其實就是在檔頭加上<code>\uFEFF</code>字元</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;# encoding : utf-8</span>
</span><span class='line'><span class="sr">require &#39;CSV&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">def some_method</span>
</span><span class='line'><span class="sr">  &quot;\uFEFF</span><span class="si">#{</span><span class="n">get_csv</span><span class="si">}</span><span class="sr">&quot;</span>
</span><span class='line'><span class="sr">end</span>
</span><span class='line'>
</span><span class='line'><span class="sr">def get_csv</span>
</span><span class='line'>
</span><span class='line'><span class="sr">  CSV.generate do |csv|</span>
</span><span class='line'><span class="sr">    csv &amp;lt;&amp;lt; [&#39;編號&#39;, &#39;姓名&#39;]</span>
</span><span class='line'><span class="sr">    members.each do |member|</span>
</span><span class='line'><span class="sr">  csv &amp;lt;&amp;lt; [num, name]</span>
</span><span class='line'><span class="sr">    end</span>
</span><span class='line'><span class="sr">  end</span>
</span><span class='line'>
</span><span class='line'><span class="sr">end</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>但是這個方法在Excel 2007，還是會亂碼，不過在Excel 2003、2010都是可以。</p>

<p>如果有人可以提供更好的方法就留個給給我吧&hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[出現private Method `write_uploader' Called For]]></title>
    <link href="http://blog.sammylin.tw/write-uploader-error/"/>
    <updated>2012-04-24T22:29:00+08:00</updated>
    <id>http://blog.sammylin.tw/write-uploader-error</id>
    <content type="html"><![CDATA[<p>用<a href="https://github.com/jnicklas/carrierwave">carrierwave</a>做我的upload plugin
用的時候很正常，有一天突然噴出了錯誤訊息</p>

<pre><code>NoMethodError in Admin::ArticlesController#update

private method `write_uploader' called for #&lt;Article:0x007f8f6cd1c3d0&gt;
</code></pre>

<p>解了老半天也上網google了一下，也到Github上找<a href="https://github.com/jnicklas/carrierwave/issues/511">issue</a>，都沒辦法！</p>

<p>最後才發現</p>

<p><div><script src='https://gist.github.com/2485397.js'></script>
<noscript><pre><code>class Article &lt; ActiveRecord::Base                                                                                                                       
  default_scope order('post_date DESC')
  #scope :public, where( :post_status =&gt; 'public' )
  scope :public_article, where( :post_status =&gt; 'public' )
  mount_uploader :article_image, ArticleImageUploader
end</code></pre></noscript></div>
</p>

<p> 我有一個<code>scope</code>叫做<code>public</code>，經過<a href="http://stackoverflow.com/questions/7658359/what-is-objectprivate-and-objectpublic-in-ruby">小小的了解</a>發現雖然不是不是保留字，不過是拿來當修飾詞的，雖然不是每一個method都會用到，不過拿來用可能會有問題！</p>

<p> 所以只要把<code>scope :public</code>改成其他的字就行了</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Rails]製作下拉式選單集合]]></title>
    <link href="http://blog.sammylin.tw/simple-form-collection/"/>
    <updated>2012-04-20T10:34:00+08:00</updated>
    <id>http://blog.sammylin.tw/simple-form-collection</id>
    <content type="html"><![CDATA[<p>目前的狀況是這樣子的，目前是有做<code>CMS</code>所以需要有</p>

<pre><code># Public(公開)
# Private(私人)
# Draft(草稿)
</code></pre>

<p>這三種，不過這個集合可以用類似<a href="https://github.com/jeffp/enumerated_attribute">jeffp/enumerated_attribute</a>的gem配合或者是說用<a href="https://github.com/twinslash/enumerize">twinslash/enumerize</a>，不過我更懶，我直接把data丟到collection裡面就好了，因為其他地方是用不大到的~</p>

<pre><code>#view/articles/_form.html.erb 
&lt;%= f.input :post_status, :collection =&gt; ["public", "private", "draft"]%&gt;
</code></pre>

<p>因為我使用的是<a href="https://github.com/plataformatec/simple_form">plataformatec/simple_form</a>的關係，所以他自動幫我產生一個select的下拉式選單，應該是長這樣子</p>

<p><img src="https://lh3.googleusercontent.com/-gKzIpoD9cSE/T5DP9853W2I/AAAAAAAABwo/3fcIwnDxQq0/s800/%25E8%259E%25A2%25E5%25B9%2595%25E5%25BF%25AB%25E7%2585%25A7%25202012-04-20%2520%25E4%25B8%258A%25E5%258D%258810.50.34.png" alt="" /></p>

<p>但是如果是需要多國語系的話</p>

<pre><code>#view/articles/_form.html.erb 
&lt;%= f.input :post_status, :collection =&gt; [[t(".public"),"public"], [t(".private"), "private"], [t(".draft"), "draft"]]%&gt;
</code></pre>

<p>再來就是新增你的i18n的語系檔，我個人的習慣是另外新增一個檔案，我目前的controller叫做articles所以我建立一個i18n的中文yml檔時就會是這樣子</p>

<pre><code># config/locales/articles.zh-TW.yml
zh-TW:
    articles:
      form:
        public: 公開
        private: 私人
        draft: 草稿
</code></pre>

<p>然後要記得重啟server
就會成功了</p>

<p><img src="https://lh4.googleusercontent.com/-zrcnqhAxZ4Q/T5DRrfHqOQI/AAAAAAAABw4/U64XX2hvhwE/s800/%25E8%259E%25A2%25E5%25B9%2595%25E5%25BF%25AB%25E7%2585%25A7%25202012-04-20%2520%25E4%25B8%258A%25E5%258D%258811.01.43.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Ruby]在model生成Schema Information-annotate]]></title>
    <link href="http://blog.sammylin.tw/annotate-ruby/"/>
    <updated>2012-01-18T11:17:00+08:00</updated>
    <id>http://blog.sammylin.tw/annotate-ruby</id>
    <content type="html"><![CDATA[<p><code>annotate</code>也是一個好用的工具，像我過去要看我table的schema時，還要開mysql GUI tools 來看，不然的話我都忘記我的schema是什麼(初老症越來越嚴重了)，只要安裝<code>annotate</code>的話他會幫你自動產生Schema information 在你的model裡面，就不用一直去看你的table裡的資料，這樣子的話coding的速度就會加快許多。</p>

<!-- more -->


<h3>安裝annotate</h3>

<p>在你的Gemfile裡面加上</p>

<pre><code>gem 'annotate', :git =&gt; 'git://github.com/ctran/annotate_models.git'
</code></pre>

<p>bundle install</p>

<pre><code>$ bundle install
</code></pre>

<h3>產生schema information</h3>

<pre><code>$ bundle exec annotate
</code></pre>

<p>這樣他就會乖乖的產生出來在你的model最下面</p>

<pre><code># == Schema Information
#
# Table name: articles
#
#  id                         :integer(4)      not null, primary key
#  Title                      :string(255)
#  Content                    :text
</code></pre>

<h3>產生routes</h3>

<p>上次有講怎麼在<a href="http://blog.igotcloud.com/rails-rake-routes/">產生Rails專案裡所有的routes</a>利用<code>annotate</code>的話也可以產生routes的對應資料放到你的routes.rb裡面</p>

<pre><code>$ bundle exec annotate -r
</code></pre>

<h4>參考網站</h4>

<blockquote><p><a href="https://github.com/ctran/annotate_models">ctran / annotate_models</a> by Github</p></blockquote>
]]></content>
  </entry>
  
</feed>
