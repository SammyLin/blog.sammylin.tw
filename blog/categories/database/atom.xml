<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: DataBase | Sammy Lin]]></title>
  <link href="http://blog.sammylin.tw/blog/categories/database/atom.xml" rel="self"/>
  <link href="http://blog.sammylin.tw/"/>
  <updated>2015-04-11T18:03:45+08:00</updated>
  <id>http://blog.sammylin.tw/</id>
  <author>
    <name><![CDATA[Sammy]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[Rails]Ruby on Rails上建置MongoDB]]></title>
    <link href="http://blog.sammylin.tw/ror-ruby-on-rails-to-build-on-mongodb/"/>
    <updated>2011-10-30T00:00:00+08:00</updated>
    <id>http://blog.sammylin.tw/ror-ruby-on-rails-to-build-on-mongodb</id>
    <content type="html"><![CDATA[<p>慢慢開始要繼續Coding了，最近碰到Nosql，想說要在Ruby on Rails上面開發Nosql來玩玩，所以選擇了MongoDB。MongoDB是文件導向的資料庫，是由C++開發的，而且官方開發了許多的Drive，就連我過去使用的C#也包含在裡面，這真是吃人夠夠呀(誤)，MongoDB也有gui的資料庫管理-MongoHub 只是我在寫這篇文章的同時，他的網站好像掛了，如果要下載可以到OSX玩意下載玩玩。</p>

<h3>1.建立Rails框架</h3>

<pre><code>$ rails new mongo_test
</code></pre>

<h3>2.編輯GemFile，新增下面幾行</h3>

<p><code>ruby GemFile
source 'http://gemcutter.org'
gem "mongo_mapper"
gem 'rails', '3.1.1'
gem 'bson_ext'
</code></p>

<!--more-->


<h3>3.新增一個檔案 config/initializers/mongo.rb 來指定資料庫的設定</h3>

<p>``` ruby config/initializers/mongo.rb</p>

<h1>指定資料庫的位址跟port號</h1>

<p>MongoMapper.connection = Mongo::Connection.new(&lsquo;localhost&rsquo;, 27017)</p>

<h1>資料庫的名稱</h1>

<p>MongoMapper.database = &ldquo;#myapp-#{Rails.env}&rdquo;</p>

<p>if defined?(PhusionPassenger)<br />
   PhusionPassenger.on_event(:starting_worker_process) do |forked|</p>

<pre><code> MongoMapper.connection.connect if forked
</code></pre>

<p>   end
end
```</p>

<h3>4.編輯config/application.rb</h3>

<p>``` ruby config/application.rb
require &ldquo;action_controller/railtie&rdquo;
require &ldquo;action_mailer/railtie&rdquo;
require &ldquo;active_resource/railtie&rdquo;
require &ldquo;rails/test_unit/railtie&rdquo;</p>

<h1>require &lsquo;rails/all&rsquo;</h1>

<p>```</p>

<h3>5.執行bundle install</h3>

<pre><code>$ bundle install
</code></pre>

<h3>6.啟動rails server</h3>

<pre><code>$ rails server
</code></pre>

<p>你會看到少了下面這兩行訊息，就表示成功了
Database adapter sqlite3
Database schema versionp</p>

<h3>7.建立一個Scaffold</h3>

<p><code>注意：要加上--orm=mongo_mapper</code></p>

<pre><code>$ rails generate scaffold board name:string --orm=mongo_mapper
</code></pre>

<h3>8.直接開瀏覽器</h3>

<p><a href="http://127.0.0.1:3000/boards">http://127.0.0.1:3000/boards</a></p>

<p><img src="http://blog-img.igotcloud.com/wp-content/uploads/2011/10/NewImage.png" alt="" /></p>

<p><img src="http://blog-img.igotcloud.com/wp-content/uploads/2011/10/NewImage1.png" alt="" /></p>

<p><img src="http://blog-img.igotcloud.com/wp-content/uploads/2011/10/NewImage2.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[DB]簡易抓取正規化資料庫資料]]></title>
    <link href="http://blog.sammylin.tw/db%E6%8A%93%E5%8F%96%E6%AD%A3%E8%A6%8F%E5%8C%96%E8%B3%87%E6%96%99%E5%BA%AB%E8%B3%87%E6%96%99/"/>
    <updated>2008-12-10T22:46:00+08:00</updated>
    <id>http://blog.sammylin.tw/db抓取正規化資料庫資料</id>
    <content type="html"><![CDATA[<p>相信對於剛接觸ASP.NET的人來說都會使用內建的控制項來抓資料~</p>

<p>但到了比較熟了以後當然會想說自已來寫程式來抓資料</p>

<p>畢竟有些網頁不大適合使用這些控制項</p>

<p>學會了如何自已寫程式的時候又發現當資料量大的時候</p>

<p>會去google找說如何正規化~</p>

<p>正規化後的資料怎麼抓呢</p>

<p>現在就來介紹一下囉！</p>

<p>這邊範例是使用access(沒辦法筆者窮~>&lt;)</p>

<p>資料庫會有兩個資料表</p>

<p>一、program</p>

<p>主要還是id要有的</p>

<p>二、pdate</p>

<p>這邊會有主要的是id跟pid</p>

<p>pid就是program的id</p>

<p>順便一提我的program放的是課程因為課程大多都是固定的</p>

<p>而課程會有好幾次，所以我將課程的日期放入pdate裡
``` csharp</p>

<table border="2" width="750" bordercolor="#000000" align="center" cellspacing="0"  cellpadding="8">
                <tr>
   <td width="175" height="34" align="center" bordercolor="#000000" bgcolor="#FECCCB">
            <font size="2">課程名稱</font></td>
                       <td width="109" height="34" align="center" bordercolor="#000000" bgcolor="#FECCCB">
           <font size="2">時間</font></td>
                       <td bordercolor="#000000" bgcolor="#FECCCB" height="34" width="290"  align="center">
            <font size="2">課程大綱</font></td>
                       <td width="98" height="34" align="center" bordercolor="#000000" bgcolor="#FECCCB">
           <font size="2">備註</font></td>                   
          
                                         
                   </tr>
 <%
    string strDbCon = "Provider=Microsoft.jet.OLEDB.4.0;" + "Data Source="+ Server.MapPath("App_Data\\course.mdb");
            //建立資料庫連結
           OleDbConnection objCon = new OleDbConnection (strDbCon);
            objCon.Open();
            string strSQL = "SELECT * FROM program";
            OleDbCommand objCmd = new OleDbCommand(strSQL, objCon);
            OleDbDataReader objDataReader = objCmd.ExecuteReader();
           //讀取資料
           while (objDataReader.Read())
          {
               //建立正規化資料表的連結
               string strSQL2 = "SELECT * FROM pdate where pid="+objDataReader[0];
               OleDbCommand objCmd2 = new OleDbCommand(strSQL2, objCon);
               OleDbDataReader objDataReader2 = objCmd2.ExecuteReader();
               Response.Write("<tr>");
               Response.Write("<td width='175'><font size='2'>【" + objDataReader[1] + "】<br>" + objDataReader[2] + "</font></td>");
               Response.Write("<td width='109'><font size='2' face='Franklin Gothic Demi Cond'>");
               //讀取正規化資料表的資料
               while (objDataReader2.Read())
               {
                   //判斷資料是否為null
                   if (!objDataReader2.IsDBNull(2))
                  {
                       
                       DateTime mytime1 = Convert.ToDateTime(objDataReader2[2]);
                       DateTime mytime2 = Convert.ToDateTime(objDataReader2[3]);
  
                                   
                   if (mytime1.ToString("dd") == mytime2.ToString("dd"))
                   {
                       Response.Write(mytime1.ToString("M/d") );
                   }
                   else
                   {
   
                       Response.Write(mytime1.ToString("M/dd-") + mytime2.ToString("dd") );
                   }
               }
                   if (objDataReader2.IsDBNull(4))
                   {
                       Response.Write("<br/>");
                 }
                   else
                  {
                      string memo = Convert.ToString(objDataReader2[4]);
                       Response.Write("("+memo+")<br/>");
                   }
              }
               
               objDataReader2.Dispose();
               objDataReader2.Close();
               
               Response.Write("</font></td>");
               Response.Write("<td width='290'><font size='2'>" + objDataReader[3] + "</font></td>");
               if(objDataReader.IsDBNull(10)){
                   Response.Write("<td width='98'>.</td>");
               }
               else{
                  Response.Write("<td width='98'><font size='2'>" + objDataReader[10] + "</font></td>");
               }
               Response.Write("</tr>");
              i++;
           }
           objDataReader.Dispose();
           objDataReader.Close();
           objCon.Dispose();
           objCon.Close();
          
%>
           </table>


<p>```</p>
]]></content>
  </entry>
  
</feed>
